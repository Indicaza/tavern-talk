:root {
  --modal-w: 860px;
  --ring: rgba(255, 255, 255, 0.12);
  --modal-in: cubic-bezier(0.22, 1.56, 0.28, 1);
  --modal-out: cubic-bezier(0.55, 0.06, 0.68, 0.19);
}

.overlay {
  position: fixed;
  inset: 0;
  background: radial-gradient(
      1200px 600px at 70% 0%,
      rgba(34, 197, 94, 0.08),
      transparent 60%
    ),
    rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 24px;
  z-index: 50;
}

.modal {
  width: var(--modal-w);
  max-width: 100%;
  background: #151515;
  color: #f5f5f5;
  border-radius: 14px;
  box-shadow: 0 18px 60px rgba(0, 0, 0, 0.65);
  overflow: hidden;
  border: 1px solid rgba(255, 255, 255, 0.06);
}

.header {
  position: relative;
  padding: 18px 20px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.08);
  background: linear-gradient(
      180deg,
      rgba(36, 36, 36, 0.9),
      rgba(21, 21, 21, 0.9)
    ),
    radial-gradient(
      600px 160px at -10% -20%,
      rgba(59, 130, 246, 0.12),
      transparent 60%
    );
}

.headerGrid {
  display: grid;
  grid-template-columns: 86px 1fr;
  gap: 14px;
  align-items: center;
}

.portrait,
.portraitPending {
  width: 86px;
  height: 86px;
  border-radius: 50%;
}

.portrait {
  object-fit: cover;
  box-shadow: 0 0 0 2px var(--ring), 0 6px 22px rgba(0, 0, 0, 0.4);
}

.portraitPending {
  background: linear-gradient(90deg, #2c2c2c 25%, #3a3a3a 37%, #2c2c2c 63%);
  background-size: 400% 100%;
  animation: shimmer 1.2s ease-in-out infinite;
  box-shadow: 0 0 0 2px var(--ring);
}

.headerMeta {
  display: grid;
  gap: 6px;
}

.title {
  font-size: 20px;
  font-weight: 800;
  letter-spacing: 0.02em;
}

.subtitle {
  font-size: 14px;
  opacity: 0.9;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.chips {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
}

.chip {
  font-size: 11px;
  letter-spacing: 0.04em;
  padding: 4px 8px;
  border-radius: 999px;
  background: rgba(255, 255, 255, 0.06);
  border: 1px solid rgba(255, 255, 255, 0.08);
  color: #e5e7eb;
}

.closeBtn {
  position: absolute;
  right: 12px;
  top: 12px;
  width: 36px;
  height: 36px;
  border-radius: 999px;
  background: rgba(255, 255, 255, 0.04);
  border: 1px solid rgba(255, 255, 255, 0.08);
  color: #f5f5f5;
  font-size: 18px;
  cursor: pointer;
}

.closeBtn:hover {
  background: rgba(255, 255, 255, 0.08);
}

.body {
  padding: 18px 20px 20px 20px;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 14px 20px;
}

.card {
  background: #1a1a1a;
  border: 1px solid rgba(255, 255, 255, 0.06);
  border-radius: 10px;
  padding: 12px;
  display: grid;
  gap: 6px;
  animation: itemRise 0.6s var(--modal-in) both;
}

.card:nth-child(1) {
  animation-delay: 0.06s;
}
.card:nth-child(2) {
  animation-delay: 0.09s;
}
.card:nth-child(3) {
  animation-delay: 0.12s;
}
.card:nth-child(4) {
  animation-delay: 0.15s;
}

.cardLabel {
  font-size: 12px;
  letter-spacing: 0.06em;
  text-transform: uppercase;
  opacity: 0.7;
}

.cardValue {
  font-size: 14px;
  line-height: 1.5;
}

.span2 {
  grid-column: 1 / span 2;
}

.error {
  grid-column: 1 / span 2;
  color: #fca5a5;
  font-size: 13px;
  padding: 6px 8px;
  border-radius: 8px;
  background: rgba(239, 68, 68, 0.08);
  border: 1px solid rgba(239, 68, 68, 0.18);
}

.actions {
  grid-column: 1 / span 2;
  margin-top: 6px;
  display: flex;
  gap: 10px;
  justify-content: flex-end;
}

.primary,
.secondary {
  padding: 10px 16px;
  border-radius: 10px;
  cursor: pointer;
  border: 1px solid transparent;
  transition: transform 120ms ease, filter 120ms ease, background 120ms ease,
    border-color 120ms ease;
}

.primary {
  background: linear-gradient(180deg, #2f6cf0, #2557c7);
  color: white;
  border-color: #0b1222;
  box-shadow: 0 8px 24px rgba(37, 87, 199, 0.35);
}

.primary:hover {
  filter: brightness(1.05);
  transform: translateY(-1px);
}

.primary:disabled {
  opacity: 0.7;
  cursor: default;
  box-shadow: none;
  transform: none;
}

.secondary {
  background: rgba(255, 255, 255, 0.04);
  color: #f5f5f5;
  border-color: rgba(255, 255, 255, 0.08);
}

.secondary:hover {
  background: rgba(255, 255, 255, 0.08);
}

.sectionTitle {
  font-size: 12px;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  opacity: 0.75;
  margin-bottom: 6px;
}

.abilityGrid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 10px;
}

.ability {
  background: #121212;
  border: 1px solid rgba(255, 255, 255, 0.06);
  border-radius: 10px;
  padding: 10px;
  text-align: center;
}

.abbr {
  font-size: 11px;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  opacity: 0.7;
}

.score {
  font-size: 28px;
  font-weight: 800;
  line-height: 1.1;
  margin-top: 2px;
}

.mod {
  font-size: 14px;
  opacity: 0.9;
}

.abilityLabel {
  font-size: 11px;
  opacity: 0.7;
  margin-top: 2px;
}

@keyframes shimmer {
  0% {
    background-position: 100% 0;
  }
  100% {
    background-position: 0 0;
  }
}

/* Entry/exit choreography */
:global(.tt-modal-enter-from) {
  opacity: 0;
}
:global(.tt-modal-enter-active) {
  transition: opacity 0.36s ease-out;
}
:global(.tt-modal-leave-to) {
  opacity: 0;
}
:global(.tt-modal-leave-active) {
  transition: opacity 0.28s ease-in;
}

:global(.tt-modal-enter-active) .modal {
  animation: modalIn 0.58s var(--modal-in) both;
}
:global(.tt-modal-leave-active) .modal {
  animation: modalOut 0.34s var(--modal-out) both;
}

@keyframes modalIn {
  0% {
    transform: translateY(28px) scale(0.96);
    opacity: 0.6;
    filter: saturate(0.9) blur(0.3px);
  }
  60% {
    transform: translateY(-6px) scale(1.006);
    opacity: 1;
  }
  80% {
    transform: translateY(2px) scale(0.998);
  }
  100% {
    transform: translateY(0) scale(1);
    filter: saturate(1) blur(0);
  }
}

@keyframes modalOut {
  0% {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translateY(10px) scale(0.985);
    opacity: 0;
  }
}

@keyframes itemRise {
  0% {
    transform: translateY(10px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@media (max-width: 720px) {
  .body {
    grid-template-columns: 1fr;
  }
  .span2 {
    grid-column: 1;
  }
  .abilityGrid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (prefers-reduced-motion: reduce) {
  :global(.tt-modal-enter-active),
  :global(.tt-modal-leave-active),
  .card {
    animation: none;
    transition: none;
  }
}
